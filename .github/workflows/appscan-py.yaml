# Name of this GitHub Actions workflow.
name: AppScanSast

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan mainline branches and report all findings: 
  push:
    branches: ["master", "main"]
  # Schedule the CI job (this method uses cron syntax):
  schedule:
    - cron: '0 0 * * *' # Sets Semgrep to scan every day at midnight.
    # It is recommended to change the schedule to a random time.

jobs:
  semgrep:
    # User-definable name of this GitHub Actions job:
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci --json --config="p/default" --config "p/python" > semgrep.json || true 
      - shell: bash
        run: |
          curl -X POST "${{ secrets.APPSEC_DASHBOARD_URL }}/api/v2/import-scan/" -H  "accept: application/json" -H  "Content-Type: multipart/form-data"  -H "Authorization: Token ${{ secrets.DASHBOARD_TOKEN }}" -F "minimum_severity=Info" -F "active=true" -F "verified=true" -F "scan_type=Semgrep JSON Report" -F "close_old_findings=false" -F "push_to_jira=false" -F "product_name=${{ secrets.APPSEC_PRODUCT_NAME }}" -F "scan_date=$(date +%Y-%m-%d)" -F "engagement_name=$(date +%Y-%m)" -F "auto_create_context=true" -F "file=@semgrep.json"