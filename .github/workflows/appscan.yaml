name: Build
on:
  push:
    branches:
      - master # or the name of your main branch
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=pygoat
      - name: Install cyclonedx
        shell: bash
        run: |
          pip install cyclonedx-bom
      - name: Generate SBOM
        shell: bash
        run: |
          cyclonedx-py -r -o bom.xml
      - uses: actions/upload-artifact@v3
        with:
          name: SBOM Artifact
          path: bom.xml
      - name: Import SonarQube scans to dashboard
        shell: bash
        run: |
          sleep 60 
          curl -X POST ${{ secrets.APPSEC_DASHBOARD_URL }}/api/v2/import-scan/ -H  "accept: application/json" -H  "Content-Type: multipart/form-data"  -H "Authorization: Token ${{ secrets.DASHBOARD_TOKEN }}" -F "minimum_severity=Info" -F "active=true" -F "verified=true" -F "scan_type=SonarQube API Import" -F "close_old_findings=false" -F "push_to_jira=false" -F "product_name=${{ secrets.APPSEC_PRODUCT_NAME }}" -F "scan_date=$(date +%Y-%m-%d)" -F "engagement_name=$(date +%Y-%m)"
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
